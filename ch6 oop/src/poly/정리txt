인터페이스
ㄴ 추상클래스보다 추상화 정도가 높음
ㄴ 일반 메서드, 멤버변수를 가질 수 없음
ㄴ 상수와 추상메서드만 가질 수 있음
ㄴ 인스턴스 생성 불가(new 불가)
ㄴ 부모 역할(자손 클래스에게 필요한 메서드를 강제로 선언)
ㄴ 설계도 역할 (자손 클래스가 어떤 메서드를 구현해야 하는지 명시)
ㄴ 장점 : 표준화가 가능하다 / 서로 관계가 없는 클래스들에게 관계를 맺어줄 수 있다
ㄴ 인터페이스간의 상속은 다중상속이 가능하다


단일상속
ㄴ 자바(클래스)는 단일상속만을 허용
ㄴ class A extends B, C (불가능)
ㄴ 인터페이스는 다중상속 가능
ㄴ interface A extends B, C (가능)


추상클래스
ㄴ abstract 키워드를 사용하여 추상클래스를 선언
ㄴ 추상메서드 사용
ㄴ 인스턴스 생성 불가(new 불가)
ㄴ 부모 역할(자손 클래스에게 필요한 메서드를 강제로 선언)
ㄴ 추상황 : 클래스간의 공통점을 찾아내서 공통의 조상을 만드는 작업
ㄴ 구체화 : 상속을 통해 클래스를 구현, 확장하는 작업




다형성(polymorphism)
  ㄴ 상속과 관련이 있음
  ㄴ 여러가지 형태를 가질 수 있는 능력
  ㄴ 한 타입의 참조변수로 여러 타입의 객체를 참조 < employeeEx 참조.
  ㄴ 조상 타입의 참조 변수로 자손 클래스의 인스턴스를 참조한다.
  ㄴ 참조 변수의 타입에 따라 사용할 수 있는 멤버의 개수가 달라진다
  ㄴ (부모에 선언된 멤버만 접근 가능 - 단, 오버라이딩 된 메소드가 있다면
      자손 클래스의 메소드가 실행됨)